{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dashfrog_kube.fullname" . }}-postgresql
  labels:
    {{- include "dashfrog_kube.labels" . | nindent 4 }}
    component: postgresql
spec:
  replicas: {{ .Values.postgresql.replicaCount }}
  selector:
    matchLabels:
      {{- include "dashfrog_kube.selectorLabels" . | nindent 6 }}
      component: postgresql
  template:
    metadata:
      labels:
        {{- include "dashfrog_kube.selectorLabels" . | nindent 8 }}
        component: postgresql
    spec:
      {{- with .Values.serviceAccount }}
      serviceAccountName: {{ include "dashfrog_kube.serviceAccountName" $ }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.postgresql.securityContext | nindent 8 }}
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          ports:
            - name: postgresql
              containerPort: {{ .Values.postgresql.config.port }}
              protocol: TCP
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.postgresql.config.user }}"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "dashfrog_kube.fullname" . }}-secret
                  key: postgresql-password
            - name: POSTGRES_DB
              value: "{{ .Values.postgresql.config.database }}"
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
          {{- if .Values.postgresql.persistence.enabled }}
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
          {{- end }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U {{ .Values.postgresql.config.user }} -d {{ .Values.postgresql.config.database }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U {{ .Values.postgresql.config.user }} -d {{ .Values.postgresql.config.database }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        {{- if .Values.postgresql.persistence.enabled }}
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: {{ include "dashfrog_kube.fullname" . }}-postgresql-pvc
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}