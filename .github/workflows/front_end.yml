name: Frontend branch deploy
on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'frontend/**.js'
      - 'frontend/**.ts'
      - 'frontend/**.tsx'
      - 'frontend/**.jsx'
      - 'frontend/components.json'
      - 'frontend/package*.json'
      - 'frontend/nginx.conf'
      - 'frontend/*.html'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Node
        uses: actions/setup-node@v6
      - name: Install the project
        run: |
          cd frontend
          npm ci
      - name: Cache NPM packages
        uses: actions/cache@v4
        with:
          path: |
            frontend/node_modules
            ~/.npm
          key: npm_cache_${{ hashFiles('frontend/package-lock.json') }}
          restore-keys:
            npm_cache_${{ hashFiles('frontend/package-lock.json') }}
            npm_cache_
            npm_

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v6
      - name: Cache NPM packages
        uses: actions/cache@v4
        id: cache-npm
        with:
          path: |
            frontend/node_modules
            ~/.npm
          key: npm_cache_${{ hashFiles('frontend/package-lock.json') }}
          restore-keys:
            npm_cache_${{ hashFiles('frontend/package-lock.json') }}
            npm_cache_
            npm_
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Force fails cause no modules
        continue-on-error: false
        run: exit 1
      - name: Lint
        run: |
          cd frontend
          npm run lint

  build:
    env:
      REGISTRY: ghcr.io
      IMAGE_NAMESPACE: ${{ github.repository_owner }}
      IMAGE_NAME: dashfrog/frontend
      TAG: ${{ github.sha }}
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      - uses: actions/checkout@v5
      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build front image
        run: |
          docker compose -f docker-compose.yml build frontend
      - name: Tag images
        run: |
          docker tag ${REGISTRY}/${IMAGE_NAMESPACE}/${IMAGE_NAME}:latest ${REGISTRY}/${IMAGE_NAMESPACE}/${IMAGE_NAME}:${TAG}

      - name: Push images to GHCR
        run: |
          docker push ${REGISTRY}/${IMAGE_NAMESPACE}/${IMAGE_NAME}:${TAG}
          docker push ${REGISTRY}/${IMAGE_NAMESPACE}/${IMAGE_NAME}:latest
