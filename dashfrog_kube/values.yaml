# Default values for dashfrog_kube.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global configuration
global:
  # Override the chart name.
  nameOverride: ""
  fullnameOverride: ""

# ClickHouse Configuration
clickhouse:
  enabled: true
  replicaCount: 1
  
  image:
    repository: clickhouse/clickhouse-server
    pullPolicy: IfNotPresent
    tag: "latest"
  
  # ClickHouse configuration
  config:
    user: "clickhouse"
    password: "change-me-password"  # MUST be changed in production
    database: "dashfrog"
    port: 9000
    httpPort: 8123
    httpsPort: 8443
  
  # Service configuration
  service:
    type: ClusterIP
    ports:
      clickhouse: 9000
      http: 8123
      https: 8443
  
  # Resources
  resources: {}
    # limits:
    #   cpu: 1000m
    #   memory: 2Gi
    # requests:
    #   cpu: 500m
    #   memory: 1Gi
  
  # Persistent volume
  persistence:
    enabled: true
    size: 10Gi
    storageClass: ""
  
  # Security context
  securityContext:
    runAsUser: 101
    runAsGroup: 101
    fsGroup: 101

# Prometheus Configuration
prometheus:
  enabled: true
  replicaCount: 1
  
  image:
    repository: prom/prometheus
    pullPolicy: IfNotPresent
    tag: "latest"
  
  # Prometheus configuration
  config:
    scrapeInterval: "15s"
    scrapeTimeout: "10s"
    retention: "15d"
    port: 9090
  
  # Service configuration
  service:
    type: ClusterIP
    port: 9090
  
  # Resources
  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 1Gi
    # requests:
    #   cpu: 250m
    #   memory: 512Mi
  
  # Persistent volume
  persistence:
    enabled: true
    size: 5Gi
    storageClass: ""
  
  # Security context
  securityContext:
    runAsUser: 65534
    runAsGroup: 65534
    fsGroup: 65534

# Collector Configuration
collector:
  enabled: true
  replicaCount: 1
  
  image:
    repository: "ghcr.io/towlabs/dashfrog/collector"  # Must be provided - your custom collector image
    pullPolicy: IfNotPresent
    tag: "latest"
  
  # Collector configuration
  config:
    # OTLP receiver ports
    otlpGrpcPort: 4317
    otlpHttpPort: 4318
    # Prometheus exporter port
    prometheusPort: 9090
    # Health check port
    healthCheckPort: 13133
  
  # Service configuration
  service:
    type: ClusterIP
    ports:
      otlpGrpc: 4317
      otlpHttp: 4318
      prometheus: 9090
      healthCheck: 13133
  
  # Resources
  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 1Gi
    # requests:
    #   cpu: 250m
    #   memory: 512Mi
  
  # Security context
  securityContext:
    runAsUser: 10001
    runAsGroup: 10001
    fsGroup: 10001

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# Service Account Configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Node selector for all deployments
nodeSelector: {}

# Tolerations for all deployments
tolerations: []

# Affinity for all deployments
affinity: {}

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
          service:
            name: dashfrog-prometheus
            port: 9090
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# HTTPRoute configuration
httpRoute:
  enabled: false
  annotations: {}
  parentRefs:
  - name: gateway
    sectionName: http
  hostnames:
  - chart-example.local
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
