name: SDK branch deploy
on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'dashfrog_python_sdk/*.py'
      - 'dashfrog_python_sdk/tests'
      - 'dashfrog_python_sdk/uv.lock'
      - 'dashfrog_python_sdk/Dockerfile'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        run: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install the project
        run: |
          cd dashfrog_python_sdk
          uv sync --locked --all-groups --all-extras

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        run: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
      - name: Lint
        run: |
          cd dashfrog_python_sdk
          uv run pyright
          uv run ruff check

  security:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        run: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
      - name: Lint
        run: |
          cd dashfrog_python_sdk
          uv run bandit -c pyproject.toml -r .
#
#  build:
#    env:
#      REGISTRY: ghcr.io
#      IMAGE_NAMESPACE: ${{ github.repository_owner }}
#      IMAGE_NAME_BACKEND: dashfrog/backend
#      TAG: ${{ github.sha }}
#    runs-on: ubuntu-latest
#    needs:
#      - lint
#    steps:
#      - uses: actions/checkout@v5
#      - name: Log in to registry
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      - name: Build backend image
#        run: |
#          docker-compose -f docker-compose.yml build backend
#      - name: Tag images
#        run: |
#          docker tag ${REGISTRY}/${IMAGE_NAMESPACE}/${IMAGE_NAME_BACKEND}:lastest ${REGISTRY}/${IMAGE_NAMESPACE}/${IMAGE_NAME_BACKEND}:${TAG}
#
#      - name: Push images to GHCR
#        run: |
#          docker push ${REGISTRY}/${IMAGE_NAMESPACE}/${IMAGE_NAME_BACKEND}:${TAG}
#          docker push ${REGISTRY}/${IMAGE_NAMESPACE}/${IMAGE_NAME_BACKEND}:latest
