[project]
name = "dashfrog-python-sdk"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.9,<3.13"
dependencies = [
    "opentelemetry-api>=1.37.0",
    "opentelemetry-exporter-otlp>=1.37.0",
    "opentelemetry-instrumentation-requests>=0.58b0",
    "opentelemetry-sdk>=1.37.0",
    "opentelemetry-semantic-conventions>=0.58b0",
    "pydantic>=2.11.9",
    "pydantic-settings>=2.11.0",
    "shortuuid>=1.0.13",
    "structlog>=25.4.0",
]

[dependency-groups]
aws = [
    "opentelemetry-instrumentation-aws-lambda>=0.58b0",
    "opentelemetry-instrumentation-botocore>=0.58b0",
]
celery = [
    "opentelemetry-instrumentation-celery>=0.58b0",
]
console = [
    "click>=8.0.0",
    "opentelemetry-instrumentation-click>=0.58b0",
]
demo = [
    "fastapi-cli>=0.0.13",
    "fastapi[standard]>=0.118.0",
    "flask-cli>=0.4.0",
    "httpx>=0.28.1",
    "sqlalchemy>=2.0.43",
    "redis>=5.2.2",
]
dev = [
    "bandit>=1.8.6",
    "celery>=5.5.3",
    "celery-types>=0.23.0",
    "dashfrog-python-sdk",
    "isort>=6.0.1",
    "opentelemetry-exporter-jaeger>=1.11.1",
    "pdoc3>=0.11.6",
    "pyright>=1.1.405",
    "pytest>=8.4.2",
    "ruff>=0.13.2",
    "setuptools>=80.9.0",
    "shortuuid>=1.0.13",
    "sqlalchemy>=2.0.43",
    "wheel>=0.45.1",
]
fastapi = [
    "fastapi>=0.118.0",
    "opentelemetry-instrumentation-fastapi>=0.58b0",
]
flask = [
    "flask>=3.1.2",
    "opentelemetry-instrumentation-flask>=0.58b0",
]
httpx = [
    "opentelemetry-instrumentation-httpx>=0.58b0",
]
mongo = [
    "opentelemetry-instrumentation-pymongo>=0.58b0",
]
openai = [
    "opentelemetry-instrumentation-openai>=0.47.3",
]
sqlalchemy = [
    "opentelemetry-instrumentation-sqlalchemy>=0.58b0",
]

[tool.ruff]
line-length = 120
target-version = "py312"
exclude = [
    ".bzr",
    ".git",
    ".svn",
    ".hg",
    "typings",
    "src/test",
    "src/tests",
    "src/alembic"
]

[tool.ruff.lint]
extend-select = ["I"]

[tool.ruff.lint.isort.sections]
opentel = ["opentelemetry*"]
tests=["pytest", "test*"]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
force-sort-within-sections = true
forced-separate = ["tests", "opentelemetry"]
known-local-folder = ["tests"]
known-first-party=["dashfrog_python_sdk*"]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "opentel",
  "first-party",
  "local-folder",
  "tests",
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101", # asserts allowed in tests
]

[tool.ruff.lint.pycodestyle]
max-line-length = 120

[tool.pyright]
include = ["**"]
exclude = ["tests/**"]
pythonVersion = "3.12"
stubPath = "typings"
# https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults
deprecateTypingAliases = true
typeCheckingMode = "standard"

[tool.bandit]
exclude_dirs =  ["tests", ".venv", "demo"]
skips = ["B101"]

[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[tool.uv]
package = true

[tool.setuptools]
packages = ["dashfrog_python_sdk"]

[tool.setuptools.package-dir]
dashfrog_python_sdk = "."

[tool.setuptools.package-data]
dashfrog_python_sdk = ["py.typed"]

[tool.setuptools.exclude-package-data]
"*" = ["demo*", "tests*", "http_requests*", "*.db", "*.yaml"]
