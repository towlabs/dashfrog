# Production values for dashfrog_kube
# Copy this file and customize for your production environment

# Global configuration
global:
  nameOverride: ""
  fullnameOverride: ""

# ClickHouse Configuration - Production
clickhouse:
  enabled: true
  replicaCount: 1
  
  image:
    repository: clickhouse/clickhouse-server
    pullPolicy: IfNotPresent
    tag: "latest"  # Use specific version in production
  
  # ClickHouse configuration - MUST BE CHANGED
  config:
    user: "clickhouse"
    password: "CHANGE-ME-SECURE-PASSWORD"  # MUST be changed!
    database: "dashfrog"
    port: 9000
    httpPort: 8123
    httpsPort: 8443
  
  # Service configuration
  service:
    type: ClusterIP
    ports:
      clickhouse: 9000
      http: 8123
      https: 8443
  
  # Production resources
  resources:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      cpu: 2000m
      memory: 4Gi
  
  # Persistent volume - recommended for production
  persistence:
    enabled: true
    size: 50Gi  # Adjust based on your data volume
    storageClass: "fast-ssd"  # Use fast storage for production
  
  # Security context
  securityContext:
    runAsUser: 101
    runAsGroup: 101
    fsGroup: 101

# Prometheus Configuration - Production
prometheus:
  enabled: true
  replicaCount: 1
  
  image:
    repository: prom/prometheus
    pullPolicy: IfNotPresent
    tag: "latest"  # Use specific version in production
  
  # Prometheus configuration
  config:
    scrapeInterval: "15s"
    scrapeTimeout: "10s"
    retention: "30d"  # Longer retention for production
    port: 9090
  
  # Service configuration
  service:
    type: ClusterIP
    port: 9090
  
  # Production resources
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 2Gi
  
  # Persistent volume - recommended for production
  persistence:
    enabled: true
    size: 20Gi  # Adjust based on your retention needs
    storageClass: "fast-ssd"  # Use fast storage for production
  
  # Security context
  securityContext:
    runAsUser: 65534
    runAsGroup: 65534
    fsGroup: 65534

# Collector Configuration - Production
collector:
  enabled: true
  replicaCount: 2  # Run multiple replicas for high availability
  
  image:
    repository: "your-registry/dashfrog-collector"  # REQUIRED - your custom image
    pullPolicy: IfNotPresent
    tag: "v1.0.0"  # Use specific version tag
  
  # Collector configuration
  config:
    # OTLP receiver ports
    otlpGrpcPort: 4317
    otlpHttpPort: 4318
    # Prometheus exporter port
    prometheusPort: 9090
    # Debug exporter port
    debugPort: 12001
  
  # Service configuration
  service:
    type: ClusterIP
    ports:
      otlpGrpc: 4317
      otlpHttp: 4318
      prometheus: 9090
      debug: 12001
  
  # Production resources
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  
  # Security context
  securityContext:
    runAsUser: 10001
    runAsGroup: 10001
    fsGroup: 10001

# Image pull secrets for private registries
imagePullSecrets: []
# - name: myregistrykey

# Service Account Configuration
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

# Node selector for production - pin to specific nodes if needed
nodeSelector: {}
# nodeSelector:
#   kubernetes.io/os: linux
#   node-type: compute-optimized

# Tolerations for production
tolerations: []
# - key: "node-role.kubernetes.io/master"
#   operator: "Exists"
#   effect: "NoSchedule"

# Affinity for production - spread across nodes
affinity: {}
# affinity:
#   podAntiAffinity:
#     preferredDuringSchedulingIgnoredDuringExecution:
#     - weight: 100
#       podAffinityTerm:
#         labelSelector:
#           matchExpressions:
#           - key: component
#             operator: In
#             values:
#             - collector
#         topologyKey: kubernetes.io/hostname
